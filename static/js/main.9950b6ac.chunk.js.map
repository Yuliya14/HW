{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h8/bll/homeWorkReducer.ts","p2-homeworks/h8/HW8.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/Junior+.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","className","to","Message","props","classes","message","img","src","avatar","alt","angle","content","name","text","time","messageData","HW1","Affair","onClick","deleteAffairCallback","affair","_id","priority","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","onKeyPressHandler","inputClass","s","errorInput","Input","value","onChange","onBlur","onKeyPress","disabled","errorText","GreetingContainer","users","addUserCallback","setName","setError","alert","length","console","log","e","newName","currentTarget","trim","charCode","HW3","setUsers","newUser","v1","SuperInputText","type","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","input","superInput","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","setText","showAlert","setChecked","column","testSpanError","blue","SuperEditableSpan","autoFocus","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","span","height","width","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","PreJunior","Error404","SuperSelect","options","onChangeOption","mappedOptions","option","index","SuperRadio","onChangeCallback","o","i","arr","HW7","homeWorkReducer","action","payload","sort","b","age","reverse","people","initialPeople","HW8","setPeople","finalPeople","p","style","display","gridTemplateColumns","gridAutoRows","border","Junior","JuniorPlus","PATH","Routes","path","exact","render","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.9950b6ac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3zP4X\",\"img\":\"Message_img__1aCVd\",\"content\":\"Message_content___l4fl\",\"angle\":\"Message_angle__11dHI\",\"text\":\"Message_text__1P92Y\",\"name\":\"Message_name__14iIQ\",\"time\":\"Message_time__2yguL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__7pjCa\",\"errorInput\":\"SuperInputText_errorInput__18VVM\",\"error\":\"SuperInputText_error__3cqm2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__2HNEV\",\"error\":\"Greeting_error__1H6l2\",\"errorInput\":\"Greeting_errorInput__1mWGt\",\"Input\":\"Greeting_Input__DoZz-\",\"errorText\":\"Greeting_errorText__2FLky\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__IIBao\",\"column\":\"HW4_column__3VCQf\",\"testSpanError\":\"HW4_testSpanError__3oBh8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__pCQkk\",\"red\":\"SuperButton_red__3EWPg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1lDpl\",\"spanClassName\":\"SuperCheckbox_spanClassName__19M0h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"span\":\"SuperEditableSpan_span__179eK\",\"input\":\"SuperEditableSpan_input__h4LeI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2Lqq1\"};","import React from 'react'\nimport {NavLink} from 'react-router-dom'\nimport './Header.css'\n\n\nfunction Header() {\n    return (\n        <div className={\"nav\"}>\n            <button className={\"mainMenuButton\"}>nav</button>\n            <div className={\"dropdownChild\"}>\n                <NavLink to=\"/pre-junior\">preJunior </NavLink>\n                <NavLink to=\"/junior\">Junior </NavLink>\n                <NavLink to=\"/junior-plus\">Junior+</NavLink>\n            </div>\n        </div>\n    )\n}\nexport default Header\n","import React, {useState} from 'react'\nimport classes from './Message.module.css'\ntype messageType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\nfunction Message(props: messageType) {\n\n    return (\n        <div >\n            <div className={classes.message}>\n                <img className={classes.img} src={props.avatar} alt=\"\"/>\n                <div className={classes.angle}></div>\n                <div className={classes.content}>\n                    <h4 className={classes.name}>{ props.name }</h4>\n                    <h3 className={classes.text}>{props.message}</h3>\n                    <h6 className={classes.time}> {props.time}</h6>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Message\n","import React, {useState} from 'react'\nimport Message from \"./Message\";\n\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Nana',\n    message: 'Полная кабзда',\n    time: '22:00',\n}\n\nfunction HW1() {\n\n    return (\n        <div>\n            <hr/>\n            <div>homeworks 1</div>\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React, {MouseEvent} from 'react'\nimport {AffairType} from \"./HW2\";\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {\n        props.deleteAffairCallback(props.affair._id)\n    }\n\n    return (\n        <div>\n            <button onClick={deleteCallback}>X</button>\n                {props.affair.name}\n                {props.affair.priority}\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, filterAffairs, FilterType} from './HW2'\n\ntype AffairsPropsType = {\n    data: Array<AffairType>\n    setFilter: (filter: FilterType)=>void\n    deleteAffairCallback: (_id: number)=> void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {props.setFilter('all')} // need to fix\n    const setHigh = () => {props.setFilter('high')}\n    const setMiddle = () => {props.setFilter('middle')}\n    const setLow = () => {props.setFilter('low')}\n\n    return (\n        <div>\n\n            {mappedAffairs}\n\n            <button onClick={setAll}>All</button>\n            <button onClick={setHigh}>High</button>\n            <button onClick={setMiddle}>Middle</button>\n            <button onClick={setLow}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'high' | 'low' |'middle'\nexport type AffairType = {\n   _id: number\n   name: string\n   priority: AffairPriorityType\n}\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [\n    {_id: 1, name: 'React ', priority: 'high'},\n    {_id: 2, name: 'anime ', priority: 'low'},\n    {_id: 3, name: 'games ', priority: 'low'},\n    {_id: 4, name: 'work ', priority: 'high'},\n    {_id: 5, name: 'html & css ', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\n    if (filter === 'high') return affairs.filter(a => a.priority === 'high')\n    else if (filter === 'low') return affairs.filter(a => a.priority === 'low')\n    else if (filter === 'middle') return affairs.filter(a => a.priority === 'middle')\n    else return affairs\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\n    return affairs.filter(a => a._id !== _id)\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs)\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>)=>void\n    addUser: ()=>void\n    error: string\n    totalUsers: number\n    onKeyPressHandler: (e: KeyboardEvent<HTMLInputElement>)=>void\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers, onKeyPressHandler} // деструктуризация пропсов\n) => {\n    const inputClass = error ? s.errorInput : s.Input\n\n    return (\n        <span>\n            <input value={name} onChange={setNameCallback} className={`${inputClass}`}  onBlur = {setNameCallback} onKeyPress={onKeyPressHandler}/>\n            <button onClick={addUser} disabled={!name}>add</button>\n            <span>{totalUsers}</span>\n            <div className = {s.errorText}>{error}</div>\n        </span>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, KeyboardEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType>\n    addUserCallback: (name: string) => void\n}\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => {\n    const [name, setName] = useState<string>('')\n    const [error, setError] = useState<string>('')\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        const newName = e.currentTarget.value.trim()\n        if(newName){\n            setName(newName);\n            setError('')\n        }\n        else {\n            setError('Is not valid name! Try again!');\n            setName('')\n        }\n    }\n    const addUser = () => {\n        addUserCallback(name)\n        alert(`Hello ${name} !`)\n        setName('')\n        }\n\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\n        console.log(e)\n        if (e.charCode === 13) {\n            addUser();\n        }\n    }\n    const totalUsers = users.length\n    console.log(totalUsers)\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n            onKeyPressHandler={onKeyPressHandler}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string\n    name: string\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([])\n    const addUserCallback = (name: string) => {\n        let newUser = {_id: v1(), name:name}\n        setUsers([newUser, ...users])\n    }\n\n    return (\n        <div>\n            <hr/>\n           <div>homeworks 3</div>\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\nimport {TextField} from \"@material-ui/core\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange,\n        onChangeText,\n        onKeyPress,\n        onEnter,\n        error,\n        className,\n        spanClassName,\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.input} ${error? s.errorInput: s.superInput} ${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red,\n        className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange,\n        onChangeChecked,\n        className,\n        spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n       onChange && onChange(e);\n       onChangeChecked && onChangeChecked(e.currentTarget.checked)// сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\nimport s from './SuperEditableSpan.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n}\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false)\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\n\n    const onEnterCallback = () => {\n        setEditMode(false)\n        onEnter && onEnter()\n    }\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(false)\n        onBlur && onBlur(e)\n    }\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        setEditMode(!editMode)\n        onDoubleClick && onDoubleClick(e)\n    }\n\n    const spanClassName = ` ${s.span} ${className}`\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n                        className={s.input}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        <img src=\"https://findicons.com/files/icons/1673/diagram_part_2/96/diagram_v2_25.png\"\n                        height=\"30px\"\n                        width=\"30px\"/> {children || restProps.value}\n                    </span>\n                )\n            }\n        </>\n    )\n}\n\nexport default SuperEditableSpan\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state)\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    let state = defaultState\n    const stateAsString = localStorage.getItem(key)\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\n    return state\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// пример использования:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке 'test'\nsaveState<StateType>('test', {x: 'A', y: 1})\n\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\n","import React, { useState} from 'react'\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\nimport {restoreState, saveState} from './localStorage/localStorage'\n\nfunction HW6() {\n    const [value, setValue] = useState<string>('')\n\n    const save = () => {\n        saveState<string>('editable-span-value', value)\n    }\n    const restore = () => {\n        setValue(restoreState<string>('editable-span-value', value))\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 6\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperEditableSpan\n                    value={value}\n                    onChangeText={setValue}\n                    spanProps={{children: value ? undefined : 'enter text...'}}\n                />\n            </div>\n            <SuperButton onClick={save}>save</SuperButton>\n            <SuperButton onClick={restore}>restore</SuperButton>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperEditableSpan/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW6\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\nimport HW6 from \"../../h6/HW6\";\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW6/>\n\n        </div>\n    )\n}\n\nexport default PreJunior\n","import React from 'react'\nimport './Error.css'\n\nfunction Error404() {\n    return (\n        <div className={\"error\"}>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\nimport './select.css'\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\n    {\n        options,\n        onChange,\n        onChangeOption,\n        ...restProps\n    }\n) => {\n    const mappedOptions: any[] | undefined = options?.map((option, index) => (<option key={index} className={'option'} value = {option}>{option}</option>)); // map options with key\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n\n        onChange && onChange(e)\n        onChangeOption && onChangeOption(e.currentTarget.value)\n\n    }\n\n    return (\n        <select className = {'select'} onChange={onChangeCallback}  {...restProps}>\n           {mappedOptions}\n        </select>\n    )\n}\n\nexport default SuperSelect\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\nimport './radio.css'\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\n    {\n        type,\n        name,\n        options,\n        value,\n        onChange,\n        onChangeOption,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n\n        onChange && onChange(e)\n        onChangeOption && onChangeOption(e.currentTarget.value)\n\n    }\n\n\n    const mappedOptions: any[] = options ? options.map((o, i) => (\n        <label key={name + '-' + i}>\n            <input\n                className={'radio'}\n                type={'radio'}\n                name={name}\n                onChange={onChangeCallback}\n                checked={o === value}\n                value={o}\n            />\n            {o}\n        </label>\n    )) : []\n\n    return (\n        <div >\n            {mappedOptions}\n        </div>\n    )\n}\n\nexport default SuperRadio\n","import React, {useState} from 'react'\nimport SuperSelect from './common/c5-SuperSelect/SuperSelect'\nimport SuperRadio from './common/c6-SuperRadio/SuperRadio'\n\nconst arr = ['x', 'y', 'z']\n\nfunction HW7() {\n    const [value, onChangeOption] = useState(arr[1])\n\n    return (\n        <div>\n            <hr/>\n            homeworks 7\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperSelect\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n            <div>\n                <SuperRadio\n                    name={'radio'}\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperSelect/>*/}\n            {/*<AlternativeSuperRadio/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW7\n","import {UsersType} from \"../HW8\";\n\ntype sortActionType = {\n    type: 'sort'\n    payload:  'up' | 'down'\n}\n\ntype checkActionType = {\n    type: 'check'\n    payload: 'check'\n}\n\ntype ActionsType = sortActionType | checkActionType\n\nexport const homeWorkReducer = (state: UsersType, action: ActionsType): UsersType => {\n    switch (action.type) {\n        case 'sort': {\n            if(action.payload === 'up'){\n                return [...state].sort((a,b) => a.age-b.age)\n            } else {\n                return [...state].sort((a,b) => a.age-b.age).reverse()\n            }\n        }\n        case 'check': {\n            return state.filter(people => people.age >= 18)\n        }\n        default:\n            return state\n    }\n}","import React, {useState} from 'react'\nimport {homeWorkReducer} from './bll/homeWorkReducer'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\n\nexport type UserType = {\n    _id: number\n    name: string\n    age: number\n}\nexport type UsersType = Array<UserType>\n\nconst initialPeople: UsersType = [\n    {_id: 0, name: 'Кот ', age: 3},\n    {_id: 1, name: 'Александр ', age: 66},\n    {_id: 2, name: 'Коля ', age: 16},\n    {_id: 3, name: 'Виктор ', age: 44},\n    {_id: 4, name: 'Дмитрий ', age: 40},\n    {_id: 5, name: 'Ирина ', age: 55},\n]\n\nfunction HW8() {\n    const [people, setPeople] = useState<UsersType>(initialPeople)\n\n    const finalPeople = people.map((p: UserType) => (\n        <div key={p._id} style={\n            {\n                display: \"grid\",\n                gridTemplateColumns: \"1.7fr 0.7fr 10fr\",\n                gridAutoRows: \"30px\"\n            }}>\n            <div style={{border: \"2px solid lightcoral\"}}>{p.name}</div>\n            <div style={{border: \"2px solid lightcoral\"}}>{p.age}</div>\n        </div>\n    ))\n\n    const sortUp = () => setPeople(homeWorkReducer(initialPeople, {type: 'sort', payload: 'up'}))\n    const sortDown = () => setPeople(homeWorkReducer(initialPeople, {type: 'sort', payload: 'down'}))\n    const check = () => setPeople(homeWorkReducer(initialPeople, {type: 'check', payload: 'check'}))\n\n    return (\n        <div>\n            <hr/>\n            homeworks 8\n\n            {/*should work (должно работать)*/}\n            {finalPeople}\n\n            <SuperButton onClick={sortUp}>sort up</SuperButton>\n            <SuperButton onClick={sortDown}>sort down</SuperButton>\n            <SuperButton onClick={check}>check 18</SuperButton>\n\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativePeople/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW8\n","import React from 'react'\nimport HW6 from \"../../h6/HW6\";\nimport HW7 from \"../../h7/HW7\";\nimport HW8 from \"../../h8/HW8\";\n\nfunction Junior() {\n    return (\n        <div>\n            <HW7/>\n            <HW8/>\n            {/*<HW9/>*/}\n            {/*<HW10/>*/}\n            {/*<HW11/>*/}\n            {/*<HW12/>*/}\n\n        </div>\n    )\n}\n\nexport default Junior\n","import React from 'react'\n\nfunction JuniorPlus() {\n    return (\n        <div>\n            {/*<HW13/>*/}\n\n        </div>\n    )\n}\n\nexport default JuniorPlus\n","import React from 'react'\nimport {Redirect, Route, Switch } from 'react-router-dom'\nimport PreJunior from './pages/PreJunior'\nimport Error404 from \"./pages/Error404\";\nimport Junior from \"./pages/Junior\";\nimport JuniorPlus from \"./pages/Junior+\";\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    JUNIOR: '/junior',\n    JUNIOR_PLUS: '/junior-plus',\n\n}\n\nfunction Routes() {\n    return (\n        <div>\n            <Switch>\n            <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n\n            <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\n            <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\n            <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\n            <Route render={() => <Error404/>}/>\n\n            </Switch>\n        </div>\n    )\n}\n\nexport default Routes\n","import React from 'react'\nimport Header from './Header'\nimport Routes from './Routes'\nimport {HashRouter} from \"react-router-dom\";\n\nfunction HW5() {\n    return (\n        <div>\n            <HashRouter>\n\n            <Header/>\n\n            <Routes/>\n\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport HW5 from '../../../p2-homeworks/h5/HW5';\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            <hr/>\n\n            <HW5/>\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}